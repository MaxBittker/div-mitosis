{"version":3,"sources":["index.js"],"names":["arrows","dirs","sound","Howl","src","volume","idCounter","nodePrototype","this","id","children","direction","root","push","BLOCK","props","_this","Object","_home_max_workspace_div_mitosis_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_max_workspace_div_mitosis_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_max_workspace_div_mitosis_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","gotClicked","e","_this$props","parentHandler","d","console","log","state","c","setState","clicked","eventToDir","_ref","node","length","setTimeout","play","newVessel","newLeaf","newnewNode","stopPropagation","_target$getBoundingCl","target","getBoundingClientRect","left","top","width","height","max","Math","normx","clientX","normy","clientY","normAngle","atan2","PI","round","mouseMove","index","t","window","_this2","_this$props2","_this$state","isVessel","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","onClick","onMouseMove","className","concat","style","backgroundColor","map","child","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1ad46bb6.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Howl } from \"howler\";\nimport \"./styles.css\";\nlet arrows = [\"←\", \"↑\", \"→\", \"↓\"];\nlet dirs = [\"left\", \"up\", \"right\", \"down\"];\n\nvar sound = new Howl({\n  src: [\"pop.m4a\"],\n  volume: 0.2\n});\n// let tree = {};\n\nlet idCounter = 1;\nfunction nodePrototype() {\n  this.id = idCounter;\n  this.children = [];\n  this.direction = -1;\n  idCounter++;\n}\nlet root = new nodePrototype();\n\nroot.children.push(new nodePrototype());\n\nclass BLOCK extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      c: 0,\n      t: \"\"\n    };\n    window.setTimeout(() => {\n      if (props.root) {\n        this.setState({ c: 0 });\n      } else {\n      }\n    }, 100);\n  }\n  gotClicked = e => {\n    let { d, parentHandler } = this.props;\n    if (parentHandler) {\n      console.log(\"parent\");\n      parentHandler(e);\n      return;\n    }\n    console.log(\"own\");\n\n    let { c } = this.state;\n    this.setState({ clicked: \"true\" });\n    let direction = this.eventToDir(e);\n    this.setState(({ c }) => {\n      let node = this.props.node;\n      console.log(node.children.length);\n      if (node.children.length < 2) {\n        setTimeout(sound.play, 100);\n\n        let newVessel = new nodePrototype();\n        node.children.push(newVessel);\n        node.direction = direction;\n        newVessel.direction = direction;\n        let newLeaf = new nodePrototype();\n        newVessel.children.push(newLeaf);\n\n        if (node.children.length < 2) {\n          let newnewNode = new nodePrototype();\n          newLeaf.id = node.id;\n          newVessel.children.push(newnewNode);\n          newVessel.direction = direction;\n        }\n\n        // newNode.children[0].direction = direction;\n        return { c: c + 1 };\n      } else {\n        // console.log()\n        // node.children = [];\n      }\n    });\n\n    sound.play();\n    e.stopPropagation();\n  };\n  eventToDir = e => {\n    let target = e.target;\n    let { left, top, width, height } = target.getBoundingClientRect();\n    let max = Math.max(width, height);\n    let normx = ((e.clientX - left) / width - 0.5) / max;\n    let normy = ((e.clientY - top) / height - 0.5) / max;\n    let angle = Math.atan2(normy, normx);\n    let normAngle = (angle + Math.PI) / (Math.PI * 2);\n    let index = (Math.round(normAngle * 4) + 4) % 4;\n    return index;\n  };\n  mouseMove = e => {\n    let index = this.eventToDir(e);\n    this.setState({ t: arrows[index] });\n  };\n  render() {\n    let { node, d, parentHandler } = this.props;\n    let { c, t } = this.state;\n    d = d || 0;\n\n    // if (d > 30) {\n    //   return \"🌝\";\n    // }\n    let isVessel = node.children.length > 0;\n    return (\n      <div\n        onClick={this.gotClicked}\n        onMouseMove={this.mouseMove}\n        className={`block ${dirs[node.direction]} ${\n          isVessel ? \"vessel\" : \"leaf\"\n        }`}\n        style={{ backgroundColor: `hsla(${(node.id * 255) / 5},30%,80%,1.0)` }}\n      >\n        {/* {t} */}\n        {/* {isVessel ? \"\" : node.id} */}\n        {/* {d === 0 && c === 0 && \"click here to initialize 🅜🅘🅣🅞🅢🅘🅢 \"} */}\n        {node.children.map(child => {\n          return (\n            <BLOCK\n              node={child}\n              d={d + 1}\n              parentHandler={node.children.length < 2 && this.gotClicked}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<BLOCK node={root} />, rootElement);\n"],"sourceRoot":""}